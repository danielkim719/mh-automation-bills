name: Build Windows EXE

# 수동·push·PR 모두 트리거할 수 있게 설정
on:
  workflow_dispatch:     # 수동 실행
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-windows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      # 1) 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Python 설정
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # 3) 캐시된 pip dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4) 의존성 설치
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # 5) EXE 빌드
      - name: Build EXE with PyInstaller
        run: |
          pyinstaller \
            --onefile \
            --name mh-bills \
            --add-data "config.ini;." \
            --workpath build \
            --distpath dist \
            main.py

      # 6) 빌드 결과 업로드
      - name: Upload EXE artifact
        uses: actions/upload-artifact@v3
        with:
          name: mh-bills-windows
          path: dist/mh-bills.exe
